#!/bin/ksh
#QSUB -l mpp_p=16                          # requests 8 PEs
#QSUB -l mpp_t=0:10:0                      # jobtime 
#QSUB -l p_mpp_t=0:10:0                    # jobtime
#QSUB -r job4                            # assigns specified name to the request
#QSUB -q normal                            # sends job into a low priority queue
#QSUB -nr                                  # no rerun on crash
#QSUB -mu petreczk@physik.uni-bielefeld.de # address to which mail is sent
#QSUB -me                                  # send mail when job ends
#QSUB -o /usr_HLRZ/hbi08/hbi084/f77/stout
#QSUB -e /usr_HLRZ/hbi08/hbi084/f77/stderr


#
# e - Abbruch bei Fehler
# u - Abbruch bei undefinierten Variablen
# v - Ausgabe der Kommandos 
# x - Ausgabe der expandierten Kommandos
#

set -euvx

#
# change to working directory
#

cd $SCRDIR



#
# define parameters
#
# NP     number of processes
# XY     size of the lattice in x and y direction
# ZZ     size of the lattice in z direction
# beta   gauge coupling
# x      effective temperature
# y      effective hopping parameter
#

NP=8
SS=16
ZZ=16
beta=09000
X=01000
Y=05000



#
# define directories
#

BIN=$HOME/bin
JOB=$HOME/ahiggs
RUN=$SCRDIR


#
# change to working directory
#





#
# define suffix
#

filesuffix=_s${ZZ}_BE${beta}_x${X}_y${Y}
last=lastconfig$filesuffix



#
# read in of number of last configuration if file exists
# otherwise assume first start of run and set confstart to zero  
#

if [[ -f $JOB/$last ]]
then
 read confstart < $JOB/$last
else
 confstart=000000
fi


#
# define filenames
#
# action
# random to begin with
# random to end with
# config1...config$TT
# joblog
#

actn=action${filesuffix}_U$confstart
aconb=a_conf${filesuffix}_U$confstart
uconb=u_conf${filesuffix}_U$confstart
ranb=random${filesuffix}_U$confstart
jobl=joblog${filesuffix}_U$confstart
corr=correl${filesuffix}_U$confstart
afie=afield${filesuffix}_U$confstart

#
# copy input file to current directory
#

if [[ -f $JOB/inputfile ]]
then
  cp $JOB/inputfile $RUN/inputfile
fi

#
# copy random seed file to current  directory

if [[ -f $JOB/random${filesuffix} ]]
then
  cp $JOB/random$filesuffix $RUN/$ranb
fi


#
# copy configuration files to current directory if it exists
#

if [[ -f $JOB/random${filesuffix} ]]
then
  cp $JOB/a_conf$filesuffix $RUN/$aconb
fi

if [[ -f $JOB/u_conf${filesuffix} ]]
then
  cp $JOB/u_conf$filesuffix $RUN/$uconb
fi



#
# test inputfile for parameters
#

head -3 $RUN/inputfile | tail -1 | awk '{print $1}' | read testNP
if [[ $testNP -ne $NP ]]
then
  echo "script and inputfile differ in NP!"
  exit
fi


head -1 $RUN/inputfile | awk '{print $1}' | read testSS
if [[ $testSS -ne $SS ]]
then
  echo "script and inputfile differ in SS!"
  exit
fi


head -1 $RUN/inputfile | awk '{print $3}' | read testZZ
if [[ $testZZ -ne $ZZ ]]
then
  echo "script and inputfile differ in ZZ!"
  exit
fi


head -8 $RUN/inputfile | tail -1 | awk '{print $1}' |sed 's/\.//' | read testbeta
if [[ $testbeta -ne $beta ]]
then
  echo "script and inputfile differ in beta!"
  exit
fi


head -9 $RUN/inputfile | tail -1 | awk '{print $1}' |sed 's/\.//' | read testx
if [[ $testx -ne $X ]]
then
  echo "script and inputfile differ in x!"
  exit
fi


head -10 $RUN/inputfile | tail -1 | awk '{print $1}' |sed 's/\.//' | read testy
if [[ $testy -ne $Y ]]
then
  echo "script and inputfile differ in y!"
  exit
fi




#
# set enviroment variable for MPI
#

export MPI_SM_TRANSFER=0
#export SCACHE_D_STREAMS=0
#export SCACHE_I_STREAMS=0




#######################################################
# start program
#

$BIN/higgs_debug_$NP
#
#
#######################################################


#
# clean everything up
#
if [[ $confstart -eq 0 ]]
then
  cat  $actn >> $JOB/action$filesuffix && rm $actn
  cat  $jobl >> $JOB/joblog$filesuffix && rm $jobl
  cat  $corr >> $JOB/correl$filesuffix && rm $corr
  cat  $afie  >> $JOB/afieldfilesuffix && rm $afie
else
  tail +4 $actn >> $JOB/action$filesuffix && rm $actn
  tail +4 $jobl >> $JOB/joblog$filesuffix && rm $jobl
  tail +4 $corr >> $JOB/correl$filesuffix && rm $corr
  tail +4 $afie >> $JOB/afield$filesuffix && rm $afie
fi


read confend < $last
rane=random${filesuffix}_U$confend
acone=a_conf${filesuffix}_U$confend
ucone=u_conf${filesuffix}_U$confend

cp  $rane    $JOB/random$filesuffix && rm $rane
cp  $acone   $JOB/a_conf$filesuffix && rm $acone
cp  $ucone   $JOB/u_conf$filesuffix && rm $ucone
cp  $last    $JOB/${last} && rm  $last 
cp  $RUN/inputfile $JOB/inputfile && rm $RUN/inputfile



#cp *_conf*  $ARC

if [[ -f $ranb ]]
then 
  rm $ranb
fi

if [[ -f $aconb ]]
then 
  rm $aconb
fi

if [[ -f $uconb ]]
then 
  rm $uconb
fi

exit

confstart_plus=` expr ${confstart} + 1 `
if [[ $confstart_plus -lt 10000 ]]
then
   confstart_plus=0$confstart_plus 
   if [[ $confstart_plus -lt 1000 ]]
   then
      confstart_plus=0$confstart_plus
      if [[ $confstart_plus -lt 100 ]]
      then
         confstart_plus=0$confstart_plus
         if [[ $confstart_plus -lt 10 ]]
         then 
            confstart_plus=0$confstart_plus
         fi
      fi
   fi
fi

#
# tar the correlation files together
#

tar cvf $ARC/correl/correl${filesuffix}_U${confstart_plus}-${confend}.tar \
                    correl*U?????_?
rm correl${filesuffix}_U?????_?
 


#
# cp the configuration
#
cp config* /arch/hbi08/hbi083/hyb/job/secure



#
# submit the script again
#
if [[ -f ${RUN}/go ]]
then
  cd $JOB
  qsub $JOB/job$beta-$kappa
fi






